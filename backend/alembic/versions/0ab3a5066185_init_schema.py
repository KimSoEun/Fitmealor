"""init schema

Revision ID: 0ab3a5066185
Revises: 
Create Date: 2025-10-15 15:58:07.475954

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0ab3a5066185'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('allergen',
    sa.Column('code', sa.String(length=40), nullable=False),
    sa.Column('display_name', sa.String(), nullable=True),
    sa.Column('severity_default', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('code', name=op.f('pk_allergen'))
    )
    op.create_table('cuisine_tag',
    sa.Column('code', sa.String(length=40), nullable=False),
    sa.Column('display_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('code', name=op.f('pk_cuisine_tag'))
    )
    op.create_table('image_asset',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('alt_text', sa.String(), nullable=True),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_image_asset'))
    )
    op.create_table('nutrient',
    sa.Column('code', sa.String(length=40), nullable=False),
    sa.Column('unit', sa.String(length=16), nullable=False),
    sa.Column('display_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('code', name=op.f('pk_nutrient'))
    )
    op.create_table('recommendation_session',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('algo_version', sa.String(length=64), nullable=True),
    sa.Column('input_context', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_recommendation_session'))
    )
    op.create_index(op.f('ix_recommendation_session_user_id'), 'recommendation_session', ['user_id'], unique=False)
    op.create_table('user_account',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=True),
    sa.Column('auth_provider', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_account')),
    sa.UniqueConstraint('email', name=op.f('uq_user_account_email'))
    )
    op.create_table('user_interaction',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('session_id', sa.String(length=36), nullable=True),
    sa.Column('meal_id', sa.String(length=36), nullable=True),
    sa.Column('event_type', sa.String(length=20), nullable=False),
    sa.Column('event_ts', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_interaction'))
    )
    op.create_index(op.f('ix_user_interaction_event_ts'), 'user_interaction', ['event_ts'], unique=False)
    op.create_index(op.f('ix_user_interaction_meal_id'), 'user_interaction', ['meal_id'], unique=False)
    op.create_index(op.f('ix_user_interaction_session_id'), 'user_interaction', ['session_id'], unique=False)
    op.create_index(op.f('ix_user_interaction_user_id'), 'user_interaction', ['user_id'], unique=False)
    op.create_table('algo_feature_snapshot',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('session_id', sa.String(length=36), nullable=False),
    sa.Column('feature_type', sa.String(length=20), nullable=False),
    sa.Column('feature_payload', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['recommendation_session.id'], name=op.f('fk_algo_feature_snapshot_session_id_recommendation_session'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_algo_feature_snapshot'))
    )
    op.create_index(op.f('ix_algo_feature_snapshot_session_id'), 'algo_feature_snapshot', ['session_id'], unique=False)
    op.create_table('ingredient',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('canonical_name', sa.String(), nullable=False),
    sa.Column('image_asset_id', sa.String(length=36), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['image_asset_id'], ['image_asset.id'], name=op.f('fk_ingredient_image_asset_id_image_asset')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ingredient'))
    )
    op.create_table('meal',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('canonical_name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('image_asset_id', sa.String(length=36), nullable=True),
    sa.Column('calories', sa.Numeric(precision=7, scale=2), nullable=True),
    sa.Column('protein_g', sa.Numeric(precision=7, scale=2), nullable=True),
    sa.Column('fat_g', sa.Numeric(precision=7, scale=2), nullable=True),
    sa.Column('carb_g', sa.Numeric(precision=7, scale=2), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['image_asset_id'], ['image_asset.id'], name=op.f('fk_meal_image_asset_id_image_asset')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_meal'))
    )
    op.create_table('recommendation_item',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('session_id', sa.String(length=36), nullable=False),
    sa.Column('meal_id', sa.String(length=36), nullable=False),
    sa.Column('rank', sa.Integer(), nullable=False),
    sa.Column('score', sa.Numeric(precision=8, scale=4), nullable=False),
    sa.Column('filter_applied', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['recommendation_session.id'], name=op.f('fk_recommendation_item_session_id_recommendation_session'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_recommendation_item')),
    sa.UniqueConstraint('session_id', 'meal_id', name='uq_rec_item_once_per_meal_in_session')
    )
    op.create_index(op.f('ix_recommendation_item_meal_id'), 'recommendation_item', ['meal_id'], unique=False)
    op.create_index(op.f('ix_recommendation_item_session_id'), 'recommendation_item', ['session_id'], unique=False)
    op.create_table('user_health_measure',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('measure_date', sa.Date(), nullable=False),
    sa.Column('weight_kg', sa.Float(), nullable=True),
    sa.Column('bmi', sa.Float(), nullable=True),
    sa.Column('bmr', sa.Float(), nullable=True),
    sa.Column('activity_level', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user_account.id'], name=op.f('fk_user_health_measure_user_id_user_account'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_health_measure')),
    sa.UniqueConstraint('user_id', 'measure_date', name='uq_user_measure_once_per_day')
    )
    op.create_index(op.f('ix_user_health_measure_user_id'), 'user_health_measure', ['user_id'], unique=False)
    op.create_table('user_preference',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('goal_type', sa.String(length=30), nullable=True),
    sa.Column('diet_type', sa.String(length=30), nullable=True),
    sa.Column('allergy_codes', sa.String(), nullable=True),
    sa.Column('disliked_ingredients', sa.String(), nullable=True),
    sa.Column('target_kcal', sa.Integer(), nullable=True),
    sa.Column('target_protein_g', sa.Integer(), nullable=True),
    sa.Column('target_fat_g', sa.Integer(), nullable=True),
    sa.Column('target_carb_g', sa.Integer(), nullable=True),
    sa.Column('last_updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user_account.id'], name=op.f('fk_user_preference_user_id_user_account'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_preference'))
    )
    op.create_index(op.f('ix_user_preference_user_id'), 'user_preference', ['user_id'], unique=False)
    op.create_table('user_profile',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=True),
    sa.Column('gender', sa.String(length=20), nullable=True),
    sa.Column('birth_date', sa.Date(), nullable=True),
    sa.Column('height_cm', sa.Float(), nullable=True),
    sa.Column('weight_kg', sa.Float(), nullable=True),
    sa.Column('country', sa.String(length=80), nullable=True),
    sa.Column('locale', sa.String(length=10), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user_account.id'], name=op.f('fk_user_profile_user_id_user_account'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_profile'))
    )
    op.create_index(op.f('ix_user_profile_user_id'), 'user_profile', ['user_id'], unique=False)
    op.create_table('ingredient_allergen',
    sa.Column('ingredient_id', sa.String(length=36), nullable=False),
    sa.Column('allergen_code', sa.String(length=40), nullable=False),
    sa.Column('trace_possible', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['allergen_code'], ['allergen.code'], name=op.f('fk_ingredient_allergen_allergen_code_allergen'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['ingredient_id'], ['ingredient.id'], name=op.f('fk_ingredient_allergen_ingredient_id_ingredient'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ingredient_id', 'allergen_code', name=op.f('pk_ingredient_allergen'))
    )
    op.create_table('meal_i18n',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('meal_id', sa.String(length=36), nullable=False),
    sa.Column('lang', sa.String(length=8), nullable=False),
    sa.Column('name_local', sa.String(), nullable=False),
    sa.Column('desc_local', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['meal_id'], ['meal.id'], name=op.f('fk_meal_i18n_meal_id_meal'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_meal_i18n')),
    sa.UniqueConstraint('meal_id', 'lang', name='uq_meal_lang_once')
    )
    op.create_table('meal_ingredient',
    sa.Column('meal_id', sa.String(length=36), nullable=False),
    sa.Column('ingredient_id', sa.String(length=36), nullable=False),
    sa.Column('quantity_g', sa.Numeric(precision=7, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['ingredient_id'], ['ingredient.id'], name=op.f('fk_meal_ingredient_ingredient_id_ingredient'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['meal_id'], ['meal.id'], name=op.f('fk_meal_ingredient_meal_id_meal'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('meal_id', 'ingredient_id', name=op.f('pk_meal_ingredient'))
    )
    op.create_table('meal_nutrient',
    sa.Column('meal_id', sa.String(length=36), nullable=False),
    sa.Column('nutrient_code', sa.String(length=40), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=3), nullable=False),
    sa.ForeignKeyConstraint(['meal_id'], ['meal.id'], name=op.f('fk_meal_nutrient_meal_id_meal'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['nutrient_code'], ['nutrient.code'], name=op.f('fk_meal_nutrient_nutrient_code_nutrient'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('meal_id', 'nutrient_code', name=op.f('pk_meal_nutrient'))
    )
    op.create_table('meal_tag',
    sa.Column('meal_id', sa.String(length=36), nullable=False),
    sa.Column('tag_code', sa.String(length=40), nullable=False),
    sa.ForeignKeyConstraint(['meal_id'], ['meal.id'], name=op.f('fk_meal_tag_meal_id_meal'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_code'], ['cuisine_tag.code'], name=op.f('fk_meal_tag_tag_code_cuisine_tag'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('meal_id', 'tag_code', name=op.f('pk_meal_tag'))
    )
    op.create_table('rating_feedback',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('session_item_id', sa.String(length=36), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('comment', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['session_item_id'], ['recommendation_item.id'], name=op.f('fk_rating_feedback_session_item_id_recommendation_item'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_rating_feedback')),
    sa.UniqueConstraint('user_id', 'session_item_id', name='uq_feedback_once_per_user_item')
    )
    op.create_index(op.f('ix_rating_feedback_session_item_id'), 'rating_feedback', ['session_item_id'], unique=False)
    op.create_index(op.f('ix_rating_feedback_user_id'), 'rating_feedback', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_rating_feedback_user_id'), table_name='rating_feedback')
    op.drop_index(op.f('ix_rating_feedback_session_item_id'), table_name='rating_feedback')
    op.drop_table('rating_feedback')
    op.drop_table('meal_tag')
    op.drop_table('meal_nutrient')
    op.drop_table('meal_ingredient')
    op.drop_table('meal_i18n')
    op.drop_table('ingredient_allergen')
    op.drop_index(op.f('ix_user_profile_user_id'), table_name='user_profile')
    op.drop_table('user_profile')
    op.drop_index(op.f('ix_user_preference_user_id'), table_name='user_preference')
    op.drop_table('user_preference')
    op.drop_index(op.f('ix_user_health_measure_user_id'), table_name='user_health_measure')
    op.drop_table('user_health_measure')
    op.drop_index(op.f('ix_recommendation_item_session_id'), table_name='recommendation_item')
    op.drop_index(op.f('ix_recommendation_item_meal_id'), table_name='recommendation_item')
    op.drop_table('recommendation_item')
    op.drop_table('meal')
    op.drop_table('ingredient')
    op.drop_index(op.f('ix_algo_feature_snapshot_session_id'), table_name='algo_feature_snapshot')
    op.drop_table('algo_feature_snapshot')
    op.drop_index(op.f('ix_user_interaction_user_id'), table_name='user_interaction')
    op.drop_index(op.f('ix_user_interaction_session_id'), table_name='user_interaction')
    op.drop_index(op.f('ix_user_interaction_meal_id'), table_name='user_interaction')
    op.drop_index(op.f('ix_user_interaction_event_ts'), table_name='user_interaction')
    op.drop_table('user_interaction')
    op.drop_table('user_account')
    op.drop_index(op.f('ix_recommendation_session_user_id'), table_name='recommendation_session')
    op.drop_table('recommendation_session')
    op.drop_table('nutrient')
    op.drop_table('image_asset')
    op.drop_table('cuisine_tag')
    op.drop_table('allergen')
    # ### end Alembic commands ###
